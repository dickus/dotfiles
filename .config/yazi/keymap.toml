"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]
keymap = [
    { on = "<Esc>", run = "escape",  desc = "Exit visual mode, clear selected, or cancel search" },
    { on = "q",     run = "quit",    desc = "Quit the process" },
    { on = "<C-c>", run = "close",   desc = "Close the current tab, or quit if it's last" },
    { on = "<C-z>", run = "suspend", desc = "Suspend the process" },

    # Hopping
    { on = "k", run = "arrow -1", desc = "Move cursor up" },
    { on = "j", run = "arrow 1",  desc = "Move cursor down" },

    { on = [ "g", "g" ], run = "arrow top", desc = "Move cursor to the top" },
    { on = "G",          run = "arrow bot", desc = "Move cursor to the bottom" },

    # Navigation
    { on = "h", run = "leave", desc = "Go back to the parent directory" },
    { on = "l", run = "enter", desc = "Enter the child directory" },

    # Toggle
    { on = "<Space>", run = [ "toggle", "arrow 1" ],      desc = "Toggle the current selection state" },
    { on = [ "m", "k" ],   run = "toggle_all --state=on", desc = "Select all files" },
    { on = [ "m", "i" ],   run = "toggle_all",            desc = "Invert selection of all files" },

    # Spotting
    { on = "<Tab>", run = "spot", desc = "Spot hovered file" },

    # Operation
    { on = "o",          run = "open",                           desc = "Open selected files" },
    { on = "O",          run = "open --interactive",             desc = "Open selected files interactively" },
    { on = [ "d", "c" ], run = "yank",                           desc = "Yank selected files to copy" },
    { on = [ "d", "m" ], run = "yank --cut",                     desc = "Yank selected files to cut" },
    { on = "p",          run = "paste",                          desc = "Paste yanked files" },
    { on = "P",          run = "paste --force",                  desc = "Paste yanked files (overwrite if the destination exists)" },
    { on = "-",          run = "link",                           desc = "Symlink the absolute path of yanked files" },
    { on = "_",          run = "hardlink",                       desc = "Hardlink yanked files" },
    { on = "<Esc>",      run = "unyank",                         desc = "Cancel the yank status" },
    { on = [ "d", "d" ], run = "remove",                         desc = "Trash selected files" },
    { on = [ "D", "D" ], run = "remove --permanently",           desc = "Permanently delete selected files" },
    { on = "a",          run = "create",                         desc = "Create a file (ends with / for directories)" },
    { on = "r",          run = "rename --cursor=before_ext",     desc = "Rename selected file(s)" },
    { on = ":",          run = "shell --interactive",            desc = "Run a shell command" },
    { on = ";",          run = "shell --block --interactive",    desc = "Run a shell command (block until finishes)" },
    { on = ".",          run = "hidden toggle",                  desc = "Toggle the visibility of hidden files" },
    { on = [ "s", "f" ], run = "search --via=fd",                desc = "Search files by name via fd" },
    { on = [ "s", "c" ], run = "search --via=rg",                desc = "Search files by content via ripgrep" },
    { on = [ "s", "d" ], run = "plugin zoxide",                  desc = "Jump to a directory via zoxide" },

    # Copy
    { on = [ "c", "c" ], run = "copy path",             desc = "Copy the file path" },
    { on = [ "c", "d" ], run = "copy dirname",          desc = "Copy the directory path" },
    { on = [ "c", "f" ], run = "copy filename",         desc = "Copy the filename" },
    { on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },

    # Filter
    { on = "f", run = "filter --smart", desc = "Filter files" },

    # Find
    { on = "/", run = "find --smart",            desc = "Find next file" },
    { on = "?", run = "find --previous --smart", desc = "Find previous file" },
    { on = "n", run = "find_arrow",              desc = "Goto the next found" },
    { on = "N", run = "find_arrow --previous",   desc = "Goto the previous found" },

    # Sorting
    { on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
    { on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
    { on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
    { on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
    { on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
    { on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
    { on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
    { on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
    { on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
    { on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },

    # Goto
    { on = [ "g", "c" ],       run = "cd ~/.config",                       desc = "Goto ~/.config" },
    { on = [ "g", "d" ],       run = "cd ~/Downloads",                     desc = "Goto ~/Downloads" },
    { on = [ "g", "f" ],       run = "cd ~/.dotfiles",                     desc = "Goto ~/.dotfiles" },
    { on = [ "g", "h" ],       run = "cd ~",                               desc = "Go home" },
    { on = [ "g", "l" ],       run = "cd ~/.local/share",                  desc = "Goto ~/.local/share" },
    { on = [ "g", "p" ],       run = "cd ~/Pictures",                      desc = "Goto ~/Pictures" },
    { on = [ "g", "s" ],       run = "cd ~/.steam/steam/steamapps/common", desc = "Goto Steam games" },
    { on = [ "g", "t" ],       run = "cd ~/.local/share/Trash",                        desc = "Goto ~/.trash" },
    { on = [ "g", "w" ],       run = "cd ~/.docs",                         desc = "Goto ~/.docs" },
    { on = [ "g", "<Space>" ], run = "cd --interactive",                   desc = "Jump interactively" },

    # Extra
    { on = [ "s", "b" ], run = "shell 'feh --no-fehbg --bg-fill $@'", desc = "Set wallpaper" },
    { on = [ "m", "e" ], run = "shell 'chmod +x $@'",                 desc = "Make file executable" },
    { on = [ "D", "T" ], run = "shell 'find $HOME/.local/share/Trash -mtime +7 -exec rm -rf {} +'", desc = "Clean trash" },
    { on = [ "w" ],      run = "tasks_show", desc = "Show task manager" },
    { on = [ "~" ],      run = "help",       desc = "Open help" },
]

[tasks]
keymap = [
    { on = "w", run = "close", desc = "Close task manager" },
    
    { on = "k", run = "arrow -1", desc = "Move cursor up" },
    { on = "j", run = "arrow 1",  desc = "Move cursor down" },

    { on = "<Enter>", run = "inspect", desc = "Inspect the task" },
    { on = "x",       run = "cancel",  desc = "Cancel the task" },

    { on = "~", run = "help", desc = "Open help" },
]

[spot]
keymap = [
    { on = "<Tab>", run = "close", desc = "Close the spot" },

    { on = "k", run = "arrow -1", desc = "Move cursor up" },
    { on = "j", run = "arrow 1",  desc = "Move cursor down" },
    { on = "h", run = "swipe -1", desc = "Swipe to the previous file" },
    { on = "l", run = "swipe 1",  desc = "Swipe to the next file" },

    # Copy
    { on = [ "c", "c" ], run = "copy cell", desc = "Copy selected cell" },

    # Help
    { on = "~", run = "help", desc = "Open help" },
]

[pick]
keymap = [
    { on = "<Esc>",   run = "close",          desc = "Cancel pick" },
    { on = "<C-c>",   run = "close",          desc = "Cancel pick" },
    { on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

    { on = "k", run = "arrow -1", desc = "Move cursor up" },
    { on = "j", run = "arrow 1",  desc = "Move cursor down" },

    # Help
    { on = "~", run = "help", desc = "Open help" },
]

[input]
keymap = [
    { on = "<C-c>",   run = "close",          desc = "Cancel input" },
    { on = "<Enter>", run = "close --submit", desc = "Submit input" },
    { on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

    # Mode
    { on = "i", run = "insert",                             desc = "Enter insert mode" },
    { on = "I", run = [ "move first-char", "insert" ],      desc = "Move to the BOL, and enter insert mode" },
    { on = "a", run = "insert --append",                    desc = "Enter append mode" },
    { on = "A", run = [ "move eol", "insert --append" ],    desc = "Move to the EOL, and enter append mode" },
    { on = "v", run = "visual",                             desc = "Enter visual mode" },
    { on = "V", run = [ "move bol", "visual", "move eol" ], desc = "Enter visual mode and select all" },
    { on = "r", run = "replace",                            desc = "Replace a single character" },

    # Character-wise movement
    { on = "h", run = "move -1", desc = "Move back a character" },
    { on = "l", run = "move 1",  desc = "Move forward a character" },

    # Word-wise movement
    { on = "b", run = "backward",              desc = "Move back to the start of the current or previous word" },
    { on = "w", run = "forward",               desc = "Move forward to the start of the next word" },
    { on = "e", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

    # Line-wise movement
    { on = "0", run = "move bol", desc = "Move to the BOL" },
    { on = "$", run = "move eol", desc = "Move to the EOL" },

    # Delete
    { on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
    { on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },

    # Kill
    { on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
    { on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
    { on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
    { on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

    # Cut/Yank/Paste
    { on = "d", run = "delete --cut",                              desc = "Cut the selected characters" },
    { on = "D", run = [ "delete --cut", "move eol" ],              desc = "Cut until the EOL" },
    { on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character" },
    { on = "y", run = "yank",                                      desc = "Copy the selected characters" },
    { on = "p", run = "paste",                                     desc = "Paste the copied characters after the cursor" },
    { on = "P", run = "paste --before",                            desc = "Paste the copied characters before the cursor" },

    # Undo/Redo
    { on = "u",     run = "undo", desc = "Undo the last operation" },
    { on = "<C-r>", run = "redo", desc = "Redo the last operation" },

    # Help
    { on = "~", run = "help", desc = "Open help" },
]

[confirm]
keymap = [
    { on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
    { on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
    { on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

    { on = "n", run = "close",          desc = "Cancel the confirm" },
    { on = "y", run = "close --submit", desc = "Submit the confirm" },

    { on = "k", run = "arrow -1", desc = "Move cursor up" },
    { on = "j", run = "arrow 1",  desc = "Move cursor down" },

    # Help
    { on = "~", run = "help", desc = "Open help" },
]

[cmp]
keymap = [
    { on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
    { on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
    { on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

    { on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
    { on = "<A-j>", run = "arrow 1",  desc = "Move cursor down" },

    # Help
    { on = "~", run = "help", desc = "Open help" },
]

[help]
keymap = [
    { on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
    { on = "<C-c>", run = "close",  desc = "Hide the help" },

    # Navigation
    { on = "k", run = "arrow -1", desc = "Move cursor up" },
    { on = "j", run = "arrow 1",  desc = "Move cursor down" },

    # Filtering
    { on = "f", run = "filter", desc = "Apply a filter for the help items" },
]

